<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACMAAAAjCAYAAAAe2bNZAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAB3RJTUUH4AsDEScP6GtJbgAAA8xJREFU
        WEe9l89LVFEUx5+6CKX88dJFBhMZiURQi4JCCsF+0iYibBlCqSXUIiKQIFxpqyyQyhSz/oGgiBIhyOwH
        5baF0CYIokX55qlk6tzO98w905lx3jg673Xh43nn/jjn3PPueXd01tK8NxWaIqLYylT/f2naIaGDkKBS
        45E27YiQIEqJrVbqfiayppxIBpqJL8QfK6HrcbsygpbhCNn4SRhiyUro6E/Ni6RZB6DEyj4CAcxnSPTr
        edZCSE2MEpKVOsIj4DyRIdGPcT3fWgqhiUFCdnubgOMFKwXRMa7nW0sFNjFGyC63EXECTiUbgugYxzy9
        zlosoIkhIvOscBamxyvMz9eVLHU/Ef7ZsYZkd6iU1FlBADNvy83SpzKWNiB9dsKrLGsIyO5uEXC0CMez
        7zaYb2PV5tlgA0voNqBFOw/z9XpreZVNFhOSlbQKmiaJbLRfPG5q911gydmx43ZeOJUlCwnZVaqC4NCf
        KDc/XrnmaEuL2XmolSV09NuAwqksWUTIbrJWUJwct5w9aeqbzrGELmNqXmGVJQsI2U1aBQGcjTk6I61t
        J0zdwfMsodszIxReWXaB7CKtgqw0v8YrzfyH9ebS5SNmS2M7S+jolzlq/toqyy4AsotUBVnJ4Nuy+LHM
        dF1rMpv3d7CEjn49j1hbZckkQrKS7Q5i4NRMlpqeG41mE1UTJPQswejs5F9ZMoGQ6IPuIHaamCwz/b17
        ubQhoWcJBqyusmSQkKhz3UHJYOjL+6hvN78mSOgBwcj6/CpLBgiJelkFaeAU18CTgR0mRgcYEnpAMCD/
        yrIDEm3WCtJIMC+H6031nk6WKwSjz05wZdkBINFmrSCNXAdfR2vM86EGluo6CCJ3ZYlC6LOSMytArgQ8
        f35ay1JdBUHo7Cw/O/JASJSBFaSRW/vqlWZTd6CNpbq1cxFcWfZBosN3ILCCBOw+PpE8N4dPn+HShoSO
        /jyzAz9p3x3HG0+LLmcFafDZ/02f/7GR7aaj8xhL6BnXQRDLK4viwIP8B+gS3wlMCsyKBhnAfYQqglwh
        IxqxD3/wy3Hgj7yimDdRMUNST14RZAKvJ8+MCEn7SX8xguNw4o+riv07ruP3uTFvtHLGe68mR0eC/ZA/
        +IV/xOH4A27RbFeNM3e9Zp0/XDXlveAdztM7XIgM2Cc//rA7Bb/wjzgcf4iyct8t8e+yPOU/cJf8h/Tz
        ccRNEJBhk2D78AN/Sb8liMPxB0np34iOIv8ePQ+6uyjKbuIm0UP0hgjswW43+4E/+IV/iiMZzD+KtR5F
        0/YJ5c91/gKwsBfvEDTZRwAAAABJRU5ErkJggg==
</value>
  </data>
</root>